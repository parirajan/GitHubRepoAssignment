@startuml
title AuthN/AuthZ for IPC Clients Using mTLS and Consul Intentions

skinparam participant {
    BackgroundColor<<ReactiveClient>> LightSkyBlue
    BackgroundColor<<Proxy>> LightYellow
    BackgroundColor<<Service>> LightCoral
    BorderColor Black
    FontSize 14
    FontColor Black
}

actor "Spring Boot Reactive Client (IPC)" as IPCClient <<ReactiveClient>>
participant "Consul/Envoy Proxy" as Proxy <<Proxy>>
participant "Protected IPC Service" as IPCService <<Service>>

== mTLS Authentication ==
IPCClient -> Proxy : Request to Publish Message
Proxy -> Proxy : Validate mTLS Certificate
Proxy -> Proxy : Verify Certificate with Trusted CA

note right of Proxy
  mTLS Authentication:
  - Validates client certificate against a trusted CA.
  - Ensures mutual authentication between client and proxy.
end note

== Authorization Using Consul Intentions ==
Proxy -> Proxy : Check Intention for IPCClient to IPCService
Proxy -> Proxy : Allow or Deny Request Based on Intention

note right of Proxy
  Consul Intentions:
  - Define explicit communication rules.
  - Example: Allow "transaction_publisher" to access "IPCService".
end note

== Forwarding to Service ==
Proxy -> IPCService : Forward Authenticated and Authorized Request
IPCService -> Proxy : Acknowledge Request
Proxy -> IPCClient : Response Delivered

note bottom
  Flow Summary:
  - IPC client uses mTLS to authenticate with Consul/Envoy.
  - Consul Intentions authorize the client to access specific services.
  - Only valid requests are forwarded to the IPC service.
end note

@enduml
