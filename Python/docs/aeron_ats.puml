@startuml
title Aeron Mutual Authentication with Pre-Rendered Keys from Vault (IAM Auth)

skinparam participant {
    BackgroundColor<<Vault>> LightYellow
    BackgroundColor<<Cluster Node>> LightSkyBlue
    BackgroundColor<<Client>> LightGreen
    BorderColor Black
    FontSize 14
    FontColor Black
}

participant "Vault (Key Management)" as Vault <<Vault>>
participant "Node 1" as N1 <<Cluster Node>>
participant "Node 2" as N2 <<Cluster Node>>
participant "Node 3" as N3 <<Cluster Node>>
participant "Node 4" as N4 <<Cluster Node>>
participant "Node 5" as N5 <<Cluster Node>>
participant "Node 6" as N6 <<Cluster Node>>

participant "Client A" as ClientA <<Client>>
participant "Client B" as ClientB <<Client>>

== Key Retrieval During Initialization ==

Vault -> N1 : Render Shared Key (IAM Authenticated)
Vault -> N2 : Render Shared Key (IAM Authenticated)
Vault -> N3 : Render Shared Key (IAM Authenticated)
Vault -> N4 : Render Shared Key (IAM Authenticated)
Vault -> N5 : Render Shared Key (IAM Authenticated)
Vault -> N6 : Render Shared Key (IAM Authenticated)
Vault -> ClientA : Render Shared Key (IAM Authenticated)
Vault -> ClientB : Render Shared Key (IAM Authenticated)

note right of Vault
  Key Management and Distribution:
  - Vault authenticates nodes and clients using IAM auth method.
  - Pre-rendered shared keys are securely distributed during initialization.
  - Keys are cached locally on each node and client.
end note

== Intra-Cluster Authentication ==

N1 -> N2 : Initiate Connection (Key Validation)
N2 -> N1 : Validate Shared Key (Pre-Rendered)
N1 -> N2 : Key Match Confirmed
N2 -> N1 : Connection Established

N1 -> N3 : Repeat Connection (Key Validation)
N3 -> N1 : Validate Shared Key (Pre-Rendered)
N1 -> N3 : Connection Established
... : Repeat Between All Nodes ...

note right of N1
  Mutual Authentication:
  - Each node validates shared keys locally.
  - Vault is not queried during runtime.
end note

== Client-to-Cluster Authentication ==

ClientA -> N1 : Initiate Subscription to Journal (Key Validation)
N1 -> ClientA : Validate Shared Key (Pre-Rendered)
ClientA -> N1 : Key Match Confirmed
N1 -> ClientA : Subscription Established

ClientA -> N2 : Repeat Subscription Request
N2 -> ClientA : Validate Shared Key (Pre-Rendered)
ClientA -> N2 : Subscription Established

ClientB -> N3 : Initiate Subscription (Key Validation)
N3 -> ClientB : Validate Shared Key (Pre-Rendered)
ClientB -> N3 : Subscription Established

note right of ClientA
  Secure Client Communication:
  - Nodes validate pre-rendered client keys.
  - Authentication is decoupled from runtime queries to Vault.
end note

@enduml
