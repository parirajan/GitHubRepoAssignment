stages:
  - validate

validate_uploaded_file:
  stage: validate
  script:
    - echo "### Starting validation job ###"
    
    # Print the input variables passed from the Python script
    - echo "UPLOADED_FILE: $UPLOADED_FILE"
    
    # Define the package registry URL
    - PACKAGE_URL="$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/package_name/version/$UPLOADED_FILE"
    
    # Fetch the uploaded file from GitLab Package Registry
    - echo "Fetching uploaded file from GitLab Package Registry..."
    - curl --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
      --output downloaded_package.iris \
      "$PACKAGE_URL"
    
    # Perform checksum validation
    - echo "Calculating checksum of the downloaded file..."
    - CHECKSUM=$(sha256sum downloaded_package.iris | awk '{ print $1 }')
    - echo "Calculated checksum: $CHECKSUM"
    
    # Extract expected checksum from metadata (assumed you have metadata or define a mechanism to retrieve it)
    # Here, we assume there's a known mechanism to verify the file. If you have metadata, you can add metadata fetch and validation steps.
    
    # Compare the calculated checksum with the expected checksum (if applicable)
    # For simplicity, we are just printing the calculated checksum for now
    - echo "Validation complete for $UPLOADED_FILE"
    
  only:
    - main
