stages:
  - validate

validate_package:
  stage: validate
  script:
    - echo "Fetching uploaded file from GitLab Package Registry..."
    - |
      curl --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
      --output downloaded_package.zip \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/package_name/version/$UPLOADED_FILE" || { echo "Failed to download package."; exit 1; }
      
    - echo "Fetching metadata file from GitLab Package Registry..."
    - |
      curl --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
      --output downloaded_metadata.txt \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/package_name/version/$METADATA_FILE" || { echo "Failed to download metadata."; exit 1; }

    - echo "Validating the package checksum and timestamp against metadata..."
    
    # Calculate package checksum
    - |
      CHECKSUM=$(sha256sum downloaded_package.zip | awk '{ print $1 }')
      echo "Package Checksum: $CHECKSUM"
    
    # Extract checksum from metadata
    - |
      METADATA_CHECKSUM=$(grep "Checksum (SHA-256)" downloaded_metadata.txt | awk -F': ' '{ print $2 }')
      echo "Metadata Checksum: $METADATA_CHECKSUM"

    # Calculate package timestamp
    - |
      TIMESTAMP=$(date -u -r downloaded_package.zip '+%Y-%m-%d %H:%M:%S')
      echo "Package Timestamp: $TIMESTAMP"

    # Extract timestamp from metadata
    - |
      METADATA_TIMESTAMP=$(grep "Timestamp" downloaded_metadata.txt | awk -F': ' '{ print $2 }')
      echo "Metadata Timestamp: $METADATA_TIMESTAMP"

    # Validate checksum
    - |
      if [ "$CHECKSUM" != "$METADATA_CHECKSUM" ]; then
        echo "Checksum mismatch! Expected: $METADATA_CHECKSUM, Found: $CHECKSUM"
        exit 1
      fi

    # Validate timestamp
    - |
      if [ "$TIMESTAMP" != "$METADATA_TIMESTAMP" ]; then
        echo "Timestamp mismatch! Expected: $METADATA_TIMESTAMP, Found: $TIMESTAMP"
        exit 1
      fi

    - echo "Validation passed!"
  only:
    - main
