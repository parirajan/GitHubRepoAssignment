
# Journal Download and Import Process Design Document

## 1. Overview

This document describes the design of the journal download and import process across the **Dev**, **QA**, **DIT (Staging)**, and **Prod** environments in the AWS setup. The process ensures that the correct versions of journals are downloaded from the centralized S3 bucket and imported into the appropriate clusters based on predefined rules for importing **tech head** and **business head** mandator changes.

## 2. Architecture Components

- **S3 Bucket (Appcore)**: Centralized storage for journal files.
- **Consul KV Store**: Used to store and update the version of the journal that needs to be applied.
- **Modelling and Execution Clusters**: Present in **Dev**, **QA**, **DIT (Staging)**, and **Prod** environments.
- **Consul Seeder**: Used by the deployment team to seed the Consul KV store with the desired journal version.
- **Consul Watch Process**: Triggers the download and import processes when the Consul KV store is updated.
- **Watch Script**: Detects journal file changes and handles the download from S3 and the import into the appropriate clusters.
- **Log System**: Logs the results of the journal import process (success or failure).

## 3. Process Flow

### 3.1. Version Update in Consul KV Store

1. **Deployment Team**: 
   - The deployment team initiates the process by updating the journal version to be downloaded and applied in the clusters.
   - This is done using the **Consul Seeder** which updates the **Consul KV store** with the version number.
   
2. **Consul KV Store**:
   - Once the KV store is updated, the watch scripts in each cluster are triggered to start the download and import process.

### 3.2. Journal Download Process

1. **Consul Watch Script**:
   - Each environment (Dev, QA, DIT, Prod) has a **Consul watch script** that listens for changes in the **Consul KV store**. 
   - Upon detecting a new version, the script initiates the download of the journal file from the **S3 Bucket (Appcore)**.

2. **S3 Bucket Access**:
   - The journal files are stored in a centralized **S3 bucket** in the **Appcore AWS account**.
   - The Modelling and Execution Clusters across environments download the journal file using the version number provided in the Consul KV store.

### 3.3. Journal Import Process

#### 3.3.1. **Dev Environment**:
   - **Tech Head Mandator**: Only the **tech head mandator** changes are imported into both the **Dev Modelling Cluster** and the **Dev Execution Cluster**.
   - **Business Head Mandator**: Business head mandator changes are not imported in the **Dev** environment.

#### 3.3.2. **QA and DIT (Staging) Environments**:
   - **Tech Head Mandator**: Both **tech head** and **business head mandator** changes are imported into the **QA Modelling Cluster**, **QA Execution Cluster**, **DIT Modelling Cluster**, and **DIT Execution Cluster**.

#### 3.3.3. **Prod Environment**:
   - **Tech Head Mandator**: Only the **tech head mandator** changes are imported into both the **Prod Modelling Cluster** and the **Prod Execution Cluster**.
   - **Business Head Mandator**: Business head mandator changes are **not imported** in the **Prod** environment.

### 3.4. Logging

1. **Log System**:
   - After the journal import process is complete, the results (either success or failure) are logged into the **Log System** for auditing purposes.

## 4. Design Rules

### 4.1. Journal Version Control
- The version of the journal to be downloaded and applied is controlled via the **Consul KV store**.
- The deployment team manually sets the journal version using the **Consul Seeder**.

### 4.2. Access Control
- **Dev** and **Prod Modelling Clusters**: Have **write** access to the **S3 bucket** in the **Appcore** AWS account.
- **QA, DIT, and Prod Clusters**: Have **read-only** access to download the journal files from the S3 bucket.

### 4.3. Import Rules
- **Dev Environment**: Only the **tech head mandator** changes are imported.
- **QA, DIT (Staging)**: Both **tech head** and **business head mandator** changes are imported.
- **Prod Environment**: Only the **tech head mandator** changes are imported. **Business head mandator** changes are skipped.

## 5. Exception Handling

### 5.1. Download Failure
- If the download from the **S3 bucket** fails, the watch script retries the process based on predefined retry logic.
- If the retries are exhausted, the process is logged as a failure in the **Log System**.

### 5.2. Import Failure
- If the import of the journal file fails (either due to incorrect data or conflicts), the process will:
  1. Move the failed journal file to a **failed folder**.
  2. Log the failure in the **Log System**.
  3. Notify the respective teams for troubleshooting.

## 6. Conclusion

The journal download and import process ensures that all clusters across environments receive the correct version of the journal based on predefined filtering rules. This process is tightly controlled through the **Consul KV store**, and access is managed via the centralized **S3 bucket** in the **Appcore AWS account**. The rules around importing the **tech head mandator** and **business head mandator** changes ensure that the appropriate changes are applied in each environment.
